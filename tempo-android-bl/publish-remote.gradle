// Add the plugins required to publish and sign the artifact.
apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    PUBLISH_GROUP_ID = 'io.github.tempo-platform'
    PUBLISH_VERSION = '0.1.5'
    PUBLISH_ARTIFACT_ID = 'tempo-android-bl'
}

// Declare the sources to ensure the correct source files are packed with executable, compiled code.
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}

// Provide the metadata of the library to release
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                // The coordinates of the library, being set from variables that we'll setup later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Print the coordinates for verification.
                println "PUBLISH_GROUP_ID: $groupId"
                println "PUBLISH_ARTIFACT_ID: $artifactId"
                println "PUBLISH_VERSION: $version"

                if (project.plugins.findPlugin("com.android.library")) {

                    // Reference the release component from the Android library.
                    from components.release
                    artifact androidSourcesJar

                    // Mostly self-explanatory metadata
                    pom {
                        name.set(artifactId)
                        description.set("SDK for Tempo Branded Levels")
                        url.set('https://github.com/Tempo-Platform/tempo-android-branded-levels')

                        licenses {
                            license {
                                name.set('MIT license')
                                url.set('https://opensource.org/licenses/MIT')
                            }
                        }
                        developers {
                            developer {
                                id.set('omnibaker')
                                name.set('omnibaker')
                                email.set('omnibaker@gmail.com')
                            }
                        }

                        // Version control info
                        scm {
                            connection.set('scm:git@github.com:Tempo-Platform/tempo-android-branded-levels.git')
                            developerConnection.set('scm:git@github.com:Tempo-Platform/tempo-android-branded-levels.git')
                            url.set('https://github.com/Tempo-Platform/tempo-android-branded-levels')
                        }
                    }

                } else {
                    System.out.println("ERROR: 'com.android.library' not found.")
                }
            }
        }
    }
}

// Get the signing details from the root project and sign the artifact.
signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.key"],
            rootProject.ext["signing.password"]
    )
    sign publishing.publications
}

